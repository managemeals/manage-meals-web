services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=mmeals
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongo:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=""
      - ME_CONFIG_BASICAUTH_PASSWORD=""
    depends_on:
      - mongo

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - 6379:6379

  elasticsearch:
    image: elasticsearch:8.12.1
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    image: kibana:8.12.1
    restart: unless-stopped
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
    depends_on:
      - elasticsearch

  recipe-scraper:
    build:
      context: .
      dockerfile: scraper.Dockerfile
    restart: unless-stopped
    environment:
      - CACHE_REDIS_HOST=redis
      - CACHE_REDIS_PORT=6379
      - CACHE_REDIS_URL=redis://redis:6379/0
      - CACHE_REDIS_DB=0
      - CACHE_KEY_PREFIX=mmeals_
    depends_on:
      - redis
    ports:
      - 8002:8000

volumes:
  mongo-data:
  elasticsearch-data:
